@inject IPageService _pageService
@inject NavigationManager _navigationManager
@implements IDisposable

<h3>Page: @(_currentPage?.Title ?? "Default")</h3>

<MudBreadcrumbs Items="_breadcrumbs" />

@code {

    private PageDto? _currentPage;
    private List<BreadcrumbItem> _breadcrumbs = new();

    protected override void OnInitialized()
    {
        HandleOnPageChange(GetRoute(_navigationManager.Uri));
        _navigationManager.LocationChanged += HandleLocationChanged;
    }

    void IDisposable.Dispose() =>
        _navigationManager.LocationChanged -= HandleLocationChanged;

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs e) => 
        HandleOnPageChange(GetRoute(e.Location));

    private void HandleOnPageChange(string route)
    {
        _currentPage = _pageService.GetPage(route);

        _breadcrumbs = new();
        _breadcrumbs.Add(new("Home", ""));
        var breadcrumbs = route.GetBreadcrumbsFromRoute();
        foreach (var breadcrumb in breadcrumbs)
            _breadcrumbs.Add(new(breadcrumb.Title, breadcrumb.Url));

        StateHasChanged();
    }

    private string GetRoute(string uri) => 
        uri.Replace(_navigationManager.BaseUri, "").Insert(0, "/");

}
